# run python3 -m doctest -v ./tests/2-matrix_divided.txt


Import
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCES CASES:

Test list of list of int and float numbers

     >>> print(matrix_divided(([[1, 2, 3], [4, 5, 6]]), 3))
     [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
     >>> print(matrix_divided(([[1, 2, 3], [-4, -5, -6]]), -3))
     [[-0.33, -0.67, -1.0], [1.33, 1.67, 2.0]]
     >>> print(matrix_divided(([[1, 2, 3], [-4, -5, -6]]), 3))
     [[0.33, 0.67, 1.0], [-1.33, -1.67, -2.0]]
     >>> print(matrix_divided(([[-1, 2, -3.5], [4, -5.9, 6], [-7, 8.4, -9]]), 3))
     [[-0.33, 0.67, -1.17], [1.33, -1.97, 2.0], [-2.33, 2.8, -3.0]]
     >>> print(matrix_divided(([[1, 2, 3], [4, 5, 6]]), -3.5))
     [[-0.29, -0.57, -0.86], [-1.14, -1.43, -1.71]]

FAIL CASES:

Test invalid arguments

     >>> print(matrix_divided(([[1, 2, 3], [4, 5]]), 3))
     Traceback (most recent call last):
     ...
     TypeError: Each row of the matrix must have the same size
     >>> print(matrix_divided(([[1, 2, 3], [4, 5]]), 0))
     Traceback (most recent call last):
     ...
     ZeroDivisionError: division by zero
     >>> print(matrix_divided(([["Hola Mundo", 2, 3], [4, 5]]), 3))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats
